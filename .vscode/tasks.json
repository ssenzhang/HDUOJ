{
	"version": "2.0.0",
	"tasks": [
		{
            "type": "shell", // 可以为shell或process，前者相当于先打开shell再输入命令，后者是直接运行命令
			"label": "g++.exe build active file", // 任务名称，与launch.json的preLaunchTask相对应
            "command": "g++", // 使用g++编译C++程序，前提是添加了g++的环境变量
            "args": [
				"-g", // 生成和调试有关的信息
                "${file}",
                "-o", // 指定输出文件名，不加该参数则默认输出a.exe，Linux下默认a.out
                "${fileDirname}/${fileBasenameNoExtension}.exe",
                "-std=c++17",
                "-Wall", // 显示所有警告
                "-Wextra", // 显示额外警告
                "-Wfatal-errors", // 遇到第一个错误就停止，减少查找错误时间
                "-static-libgcc",     // 静态链接libgcc，一般都会加上
                "-fexec-charset=UTF-8", // 生成的程序使用GBK编码，不加这一条会导致Win下输出中文乱码 
            ], // 编译命令参数
			"options": {
                "cwd": "D:/Workspace/Libraries/MinGW/bin"
            },
            "group": {
                "kind": "build",
                "isDefault": true // 为false可做到一个tasks.json配置多个编译指令，需要自己修改本文件，我这里不多提
            },
            "problemMatcher": ["$gcc"] // 此选项可以捕捉编译时终端里的报错信息；但因为有Lint，再开这个可能有双重报错
        }
	]
}